#!/usr/bin/env bash
# By Sam Mulvey <archlinux@sammulvey.com>
# based on script from Chih-Wei Huang <cwhuang@linux.org.tw>
# Modified By Fernando Ayats <ayatsfer@gmail.com>
# License: GNU Generic Public License v2

set -ux
shopt nullglob

INSTALLDIR="_INSTALLDIR"

SYSCONFIG="$INSTALLDIR/share/qemu-android-x86/config"
CONFIGDIR="${XDG_CONFIG_HOME:-$HOME/.config}/qemu-android-x86"
USERCONFIG="$CONFIGDIR/config"

# Sanity checks
if [ "$(id -u)" -eq 0 ]; then
	echo "Don't run this as root"
	exit 1
fi

nope() {
	echo "$1"
	read -rp "Press any key to exit"
	exit 1
}


# Check for config file, source
if [ -r "$USERCONFIG" ]; then
	# shellcheck source=/dev/null
	source "$USERCONFIG"
else
	mkdir -p "$CONFIGDIR"
	cp -vaf "$SYSCONFIG" "$USERCONFIG"
	nope "No config file detected, creating a new one in $USERCONFIG. Please read and modify it."
fi


# Set meaningful defaults
RAM="${RAM:-4096}"
CORES="${CORES:-2}"
DATASIZE="${DATASIZE:-16384}"
CPU=${CPU:-"host"}
NETPORT=${NETPORT:-47000}
AUDIO_QEMULINE=${AUDIO_QEMULINE:-"-device intel-hda -device hda-duplex"}

_DATADIR="${XDG_DATA_HOME:-$HOME/.local/share}/qemu-android-x86"
DATADIR="${DATADIR:-$_DATADIR}"
DATAMODE="${DATAMODE:-img}"

VGA_QEMULINE=${VGA_QEMULINE:-"-device virtio-vga-gl -display sdl,gl=on"}

# Test for system images:
IMGDIR="$INSTALLDIR/share/qemu-android-x86"
SYSTEMIMG="${SYSTEMIMG:-"$IMGDIR/system.img"}"
INITRD="${INITRD:-"$IMGDIR/initrd.img"}"
RAMDISK="${RAMDISK:-"$IMGDIR/ramdisk.img"}"
KERNEL="${KERNEL:-"$IMGDIR/kernel"}"

for i in "$INITRD" "$RAMDISK" "$KERNEL"; do
	if [ ! -e "$i" ]; then
		nope "System image $i isn't installed.  Check your android-x86 package."
	fi
done

mkdir -p "$DATADIR"

# TODO implement other modes and check for existing data
echo "$DATAMODE" > "$DATADIR/DATAMODE"

if [ "$DATAMODE" == "img" ]; then
	DATAIMG="$DATADIR/data.img"

	if [ ! -e "$DATAIMG" ]; then
		truncate -s "$DATASIZE"M "$DATAIMG"
		mkfs.ext4 "$DATAIMG"
	fi


	DATA_QEMULINE="-drive index=2,if=virtio,id=data,file=$DATAIMG,format=raw"
	DATA_CMDLINE="DATA=vdc"
fi


VIDEO_CMDLINE=""
if [ -n "${VIDEO+x}" ]; then
	VIDEO_CMDLINE="video=$VIDEO"
fi

SERIAL_QEMULINE=""
if [ -n "${SERIAL+x}" ]; then
	SERIAL_QEMULINE="-serial $SERIAL"
	# [ $SERIAL == "mon:stdio" ] && IN_TERMINAL=1
fi

do_qemu() {

	if [ -z "${BRIDGE+x}" ]; then
		NET_QEMULINE="-netdev user,id=anet0,hostfwd=tcp::$NETPORT-:5555 -device virtio-net-pci,netdev=anet0"
	else
		NET_QEMULINE="-netdev bridge,br=$BRIDGE,id=anet0 -device virtio-net-pci,netdev=anet0"
	fi

	exec qemu-system-x86_64 \
		-enable-kvm \
		-kernel "$KERNEL" \
		-append "root=/dev/ram0 androidboot.selinux=permissive console=ttyS0 RAMDISK=vdb $DATA_CMDLINE $VIDEO_CMDLINE" \
		-initrd "$INITRD" \
		-m "$RAM" \
		-smp "$CORES" \
		-cpu "$CPU" \
		-device qemu-xhci,id=xhci0 \
		-device usb-tablet,bus=xhci0.0 \
		-machine vmport=off \
		-boot menu=on \
		-drive index=0,if=virtio,id=system,file="$SYSTEMIMG",format=raw, \
		-drive index=1,if=virtio,id=ramdisk,file="$RAMDISK",format=raw,readonly=on \
		$NET_QEMULINE $DATA_QEMULINE $SERIAL_QEMULINE $VGA_QEMULINE $AUDIO_QEMULINE
}

while [ "$NETPORT" -lt 48000 ]; do
	do_qemu && break
	(( NETPORT++ ))
done
